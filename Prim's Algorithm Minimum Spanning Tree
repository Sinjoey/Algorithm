int spanningTree(int V, vector<vector<int>> adj[])
    {
        // code here
        priority_queue<pair<int,pair<int, int>>, 
            vector<pair<int,pair<int, int>>>, greater<pair<int,pair<int, int>>>> pq;
        pq.push({0,{0,-1}});
        vector<int> vis (V,0);
        int sum=0;
        while(!pq.empty()) {
            auto node=pq.top();
            pq.pop();
            int child=node.second.first;
            int parent=node.second.second;
            if(vis[child]!=1) {
                sum+=node.first;
                vis[child]=1;
                for(auto it:adj[child]) {
                    if(vis[it[0]]!=1)
                        pq.push({it[1],{it[0],child}});
                }
            }
        }
        return sum;
    }
